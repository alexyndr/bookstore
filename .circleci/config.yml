# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:11-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: bookstore_test
          POSTGRES_PASSWORD: ""

    working_directory: ~/repo

    steps:
      - checkout
  
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: Database setup
          command: |
            bundle exec rake db:create
            bundle exec rake db:schema:load

      - run:
          name: Running overcommit
          command: |
            bundle exec overcommit -s
            SKIP=AuthorEmail,AuthorName bundle exec overcommit -r

      - run:
          name: Install  Node.js 8.9.1 with build in nvm tool
          # https://www.cloudesire.com/how-to-upgrade-node-on-circleci-machine-executor/
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v8.11.3 && nvm use v8.11.3 && nvm alias default v8.11.3
            node -v

      - run:
          name: Check node version
          command: |
            node -v

      - run:
         name: Precompile assets
         command: bundle exec rake assets:precompile

      - run:
          name: run tests
          command: |
            bundle exec rspec \
              --format RspecJunitFormatter \

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2
  build-deploy:
    jobs:
      - build